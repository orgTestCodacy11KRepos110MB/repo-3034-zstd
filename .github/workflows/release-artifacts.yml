name: release-artifacts

on:
  push:
    branches: [ release, test_artifacts, win_artifacts ]

jobs:
  windows-artifacts:
    # see https://ariya.io/2020/07/on-github-actions-with-msys2
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # tag=v3
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        install: make zlib git p7zip gcc
        update: true
    - name: display versions
      run: |
        make -v
        gcc -v
    - name: Building zlib to static link
      run: |
        git clone --depth 1 --branch v1.2.11 https://github.com/madler/zlib"
        make -C zlib -f win32/Makefile.gcc libz.a
        ls -las
    - name: Building zstd
      run: |
        CPPFLAGS=-I./zlib LDFLAGS=./zlib/libz.a make allzstd MOREFLAGS=-static
    - name: Create artifacts
      run: |
        ls -las
        ./lib/dll/example/build_package.bat
        make -C programs DEBUGFLAGS= clean zstd
        cd programs/
        7z a -tzip -mx9 zstd-win-binary-%PLATFORM%.zip zstd.exe
        ls -las
#        appveyor PushArtifact zstd-win-binary-%PLATFORM%.zip &&
#        cp zstd.exe ..\bin\zstd.exe &&
#        git clone --depth 1 --branch release https://github.com/facebook/zstd &&
#        cd zstd &&
#        git archive --format=tar release -o zstd-src.tar &&
#        ..\zstd -19 zstd-src.tar &&
#        appveyor PushArtifact zstd-src.tar.zst &&
#        certUtil -hashfile zstd-src.tar.zst SHA256 > zstd-src.tar.zst.sha256.sig &&
#        appveyor PushArtifact zstd-src.tar.zst.sha256.sig &&
#        cd ..\..\bin\ &&
#        7z a -tzip -mx9 zstd-win-release-%PLATFORM%.zip * &&
#        appveyor PushArtifact zstd-win-release-%PLATFORM%.zip

#      - name: Publish
#        uses: skx/github-action-publish-binaries@release-2.0
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          args: artifacts/*
